syntax = "proto3";

package post_ride.v1;
import "google/protobuf/timestamp.proto";

option go_package = "github.com/gtforge/global_ride_management_service/pkg/sdk/post_ride/v1";

service PostRide {
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);
  rpc CompleteOrder(CompleteOrderRequest) returns (CompleteOrderResponse);
  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse);
}


message CancelOrderRequest {
  uint64 id = 1;   // required
  Data data = 2;   // required
  Audit audit = 3; // required

  message Data {
    CancellationType cancellation_outcome = 1;  // required
    google.protobuf.Timestamp cancelled_at = 2; // required
    optional google.protobuf.Timestamp ended_at = 3;
    optional google.protobuf.Timestamp scheduled_at = 4;
    optional google.protobuf.Timestamp will_arrive_at = 5;
    optional google.protobuf.Timestamp arrived_at = 6;
    optional google.protobuf.Timestamp started_at = 7;
    optional double taxi_meter = 8;
    optional Payment payment = 9;
    optional CancellationType driver_cancellation_outcome = 10;   // not required until BKK switch, new field
    optional CancellationType rider_cancellation_outcome = 11;   // not required until BKK switch, new field

    enum CancellationType {
      UNDEFINED = 0;
      ON_ARRIVAL = 1;
      CANCELLED_WITHOUT_FEE = 2;
      BEFORE_ARRIVAL = 3;
    }
  }
}

message CancelOrderResponse {}

message CompleteOrderRequest {
  uint64 id = 1;   // required
  Data data = 2;   // required
  Audit audit = 3; // required

  message Data {
    google.protobuf.Timestamp ended_at = 1; // required
    optional google.protobuf.Timestamp cancelled_at = 2;
    optional google.protobuf.Timestamp scheduled_at = 3;
    optional google.protobuf.Timestamp will_arrive_at = 4;
    optional google.protobuf.Timestamp arrived_at = 5;
    optional google.protobuf.Timestamp started_at = 6;
    optional double taxi_meter = 7;
    optional Payment payment = 8;
  }
}

message CompleteOrderResponse {}

message UpdateOrderRequest {
  uint64 id = 1;   // required
  Data data = 2;   // required
  Audit audit = 3; // required

  message Data {
    optional google.protobuf.Timestamp ended_at = 1;
    optional google.protobuf.Timestamp cancelled_at = 2;
    optional google.protobuf.Timestamp scheduled_at = 3;
    optional google.protobuf.Timestamp will_arrive_at = 4;
    optional google.protobuf.Timestamp arrived_at = 5;
    optional google.protobuf.Timestamp started_at = 6;
    optional double taxi_meter = 7;
    optional Payment payment = 8;
  }
}

message UpdateOrderResponse {}

message Payment {
  Tip tip = 1;
  PaymentType payment_type = 2;
  string credit_card_id = 3;

  message Tip {
    int32 percentage = 1;
  }

  enum PaymentType {
    UNDEFINED = 0;
    CASH = 1;
    VOUCHER = 2;
    CREDIT_CARD = 3;
  }
}

message Audit {
  string username = 1; // required
  Source source = 2;   // required

  enum Source {
    UNDEFINED = 0;
    POST_RIDE_MANAGER = 1; // Bookkeeping
  }
}


