syntax = "proto3";

package example.v1;
import "imports/google/protobuf/timestamp.proto";

option go_package = "github.com/example/demo/pkg/example/v1";

// A simple example service for demonstration
service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
}

message CreateUserRequest {
  string name = 1;                              // required
  string email = 2;                             // required  
  optional int32 age = 3;                       // optional
  optional UserType user_type = 4;              // optional enum
  optional google.protobuf.Timestamp created_at = 5; // optional timestamp
  Address address = 6;                          // required nested message

  enum UserType {
    STANDARD = 0;
    PREMIUM = 1;
    ADMIN = 2;
  }
}

message CreateUserResponse {
  string user_id = 1;
  string message = 2;
}

message GetUserRequest {
  string user_id = 1;                           // required
}

message GetUserResponse {
  string user_id = 1;
  string name = 2;
  string email = 3;
  optional int32 age = 4;
  optional UserType user_type = 5;
  optional google.protobuf.Timestamp created_at = 6;
  optional google.protobuf.Timestamp updated_at = 7;
  Address address = 8;

  enum UserType {
    STANDARD = 0;
    PREMIUM = 1;
    ADMIN = 2;
  }
}

message UpdateUserRequest {
  string user_id = 1;                           // required
  optional string name = 2;                     // optional
  optional string email = 3;                    // optional
  optional int32 age = 4;                       // optional
  optional UserType user_type = 5;              // optional enum
  optional Address address = 6;                 // optional nested message

  enum UserType {
    STANDARD = 0;
    PREMIUM = 1;
    ADMIN = 2;
  }
}

message UpdateUserResponse {
  string message = 1;
  google.protobuf.Timestamp updated_at = 2;     // required timestamp
}

message Address {
  string street = 1;                            // required
  string city = 2;                              // required
  optional string state = 3;                    // optional
  string postal_code = 4;                       // required
  Country country = 5;                          // required enum

  enum Country {
    US = 0;
    CA = 1;
    UK = 2;
    DE = 3;
    FR = 4;
  }
}


